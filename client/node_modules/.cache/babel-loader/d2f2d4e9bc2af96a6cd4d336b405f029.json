{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\Portfolio\\\\src\\\\index.js\";\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nconst express = require('express');\n\nconst bodyParser = require(\"body-parser\");\n\nconst nodemailer = require('nodemailer');\n\nconst cors = require('cors');\n\nconst app = express();\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(cors()); // app.get('/', ()=>{\n//     res.send('welcome to my forma');\n// })\n\napp.post('/api/forma', (req, res) => {\n  let data = req.body;\n  let smtpTransport = nodemailer.createTransport({\n    service: 'Gmail',\n    port: 465,\n    auth: {\n      user: 'letanco1111@gmail.com',\n      pass: \"Lyson002\"\n    }\n  });\n  let mailOptions = {\n    from: data.email,\n    to: 'letanco1111@gmail.com',\n    subject: `Message from ${data.name}`,\n    html: `\n    <h3>Informations</h3>\n    <ul>\n      <li>Name: ${data.name}</li>\n      <li>Lastname: ${data.lastname}</li>\n      <li>Email: ${data.email}</li>\n    </ul> \n    <h3>Message</h3> \n    <p>${data.message}</p>  \n    `\n  };\n  smtpTransport.sendMail(mailOptions, (error, response) => {\n    if (error) {\n      response.send(error);\n    } else {\n      response.send('Success');\n    }\n\n    smtpTransport.close();\n  });\n});\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => {\n  console.log(`server listening at port ${PORT}`);\n});\nReactDOM.render(\n/*#__PURE__*/\n// <React.StrictMode>\nReact.createElement(Suspense, {\n  fallback: /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 24\n    }\n  }, \"Loading...\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }\n})) // </React.StrictMode>\n, document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["D:/ReactJS/Portfolio/src/index.js"],"names":["React","Suspense","ReactDOM","App","serviceWorker","express","require","bodyParser","nodemailer","cors","app","use","json","urlencoded","extended","post","req","res","data","body","smtpTransport","createTransport","service","port","auth","user","pass","mailOptions","from","email","to","subject","name","html","lastname","message","sendMail","error","response","send","close","PORT","process","env","listen","console","log","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,QAAP;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,GAAG,GAACL,OAAO,EAAjB;AACAK,GAAG,CAACC,GAAJ,CAAQJ,UAAU,CAACK,IAAX,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQJ,UAAU,CAACM,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAtB,CAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQF,IAAI,EAAZ,E,CACA;AACA;AACA;;AACAC,GAAG,CAACK,IAAJ,CAAS,YAAT,EAAuB,CAACC,GAAD,EAAKC,GAAL,KAAW;AAClC,MAAIC,IAAI,GAACF,GAAG,CAACG,IAAb;AACA,MAAIC,aAAa,GAAGZ,UAAU,CAACa,eAAX,CAA2B;AAC5CC,IAAAA,OAAO,EAAC,OADoC;AAE5CC,IAAAA,IAAI,EAAC,GAFuC;AAG5CC,IAAAA,IAAI,EAAC;AACJC,MAAAA,IAAI,EAAC,uBADD;AAEJC,MAAAA,IAAI,EAAC;AAFD;AAHuC,GAA3B,CAApB;AAQA,MAAIC,WAAW,GAAC;AACZC,IAAAA,IAAI,EAACV,IAAI,CAACW,KADE;AAEZC,IAAAA,EAAE,EAAC,uBAFS;AAGZC,IAAAA,OAAO,EAAE,gBAAeb,IAAI,CAACc,IAAK,EAHtB;AAIZC,IAAAA,IAAI,EAAE;;;kBAGQf,IAAI,CAACc,IAAK;sBACNd,IAAI,CAACgB,QAAS;mBACjBhB,IAAI,CAACW,KAAM;;;SAGrBX,IAAI,CAACiB,OAAQ;;AAZN,GAAhB;AAgBAf,EAAAA,aAAa,CAACgB,QAAd,CAAuBT,WAAvB,EAAoC,CAACU,KAAD,EAAQC,QAAR,KAAmB;AACnD,QAAGD,KAAH,EAAS;AACLC,MAAAA,QAAQ,CAACC,IAAT,CAAcF,KAAd;AACH,KAFD,MAGI;AACAC,MAAAA,QAAQ,CAACC,IAAT,CAAc,SAAd;AACH;;AACDnB,IAAAA,aAAa,CAACoB,KAAd;AACH,GARD;AASC,CAnCD;AAoCA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAkB,IAA/B;AACA/B,GAAG,CAACkC,MAAJ,CAAWH,IAAX,EAAgB,MAAI;AAChBI,EAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BL,IAAK,EAA7C;AACH,CAFD;AAGAvC,QAAQ,CAAC6C,MAAT;AAAA;AACE;AACA,oBAAC,QAAD;AAAU,EAAA,QAAQ,eAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFF,CAKE;AALF,EAOEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF;AAUA7C,aAAa,CAAC8C,UAAd","sourcesContent":["import React,{Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\nconst express = require('express');\nconst bodyParser = require(\"body-parser\");\nconst nodemailer = require('nodemailer');\nconst cors = require('cors');\nconst app=express();\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended:true}));\napp.use(cors());\n// app.get('/', ()=>{\n//     res.send('welcome to my forma');\n// })\napp.post('/api/forma', (req,res)=>{\nlet data=req.body;\nlet smtpTransport = nodemailer.createTransport({\n   service:'Gmail' ,\n   port:465,\n   auth:{\n    user:'letanco1111@gmail.com',\n    pass:\"Lyson002\"\n   }\n});\nlet mailOptions={\n    from:data.email,\n    to:'letanco1111@gmail.com',\n    subject:`Message from ${data.name}`,\n    html:`\n    <h3>Informations</h3>\n    <ul>\n      <li>Name: ${data.name}</li>\n      <li>Lastname: ${data.lastname}</li>\n      <li>Email: ${data.email}</li>\n    </ul> \n    <h3>Message</h3> \n    <p>${data.message}</p>  \n    `\n};\n\nsmtpTransport.sendMail(mailOptions, (error, response)=>{\n    if(error){\n        response.send(error)\n    }\n    else{\n        response.send('Success')\n    }\n    smtpTransport.close();\n})\n})\nconst PORT = process.env.PORT||3000;\napp.listen(PORT,()=>{\n    console.log(`server listening at port ${PORT}`);\n})\nReactDOM.render(\n  // <React.StrictMode>\n  <Suspense fallback={(<div>Loading...</div>)}>\n    <App />\n  </Suspense>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}